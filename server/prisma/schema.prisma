generator client {
  provider = "prisma-client-js"  
  output = "../client/src/generated"
}


datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Property { 
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  pCode           String          @unique    //6 digit code for property
  title           String
  description     String
  type            Type
  price           String?
  location        Json           // contain lattitude and longitude of location
  address         String
  bedrooms        Int?
  bathrooms       Int?
  area            String
  region          Region
  status          PropertyStatus
  priorityLevel  Int     @default(0)
  thumbnail       String
  images          String[]
  amenities       String[]
  tags            String[]
  additionalData  Json?
  views           Int    @default(0)     
  propertyType    PropertyType
  propertySubType PropertySubType
  virtualTourUrl  String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @default(now())
  ratingAndReview RatingAndReview[]
  enquiries       Enquiry[]
  isActive        Boolean        @default(true)
}

model Consultation {
    id         String     @id   @default(auto()) @map("_id") @db.ObjectId
    phone      String @unique
    createdAt  DateTime  @default(now())

}

model RatingAndReview {
  id        String     @id   @default(auto()) @map("_id") @db.ObjectId
  propertyId String?    @db.ObjectId
  name       String?
  email      String
  rating     Int
  review     String
  approved   Boolean   @default(false)
  createdAt  DateTime  @default(now())
  Property   Property?   @relation(fields: [propertyId],references: [id])
}

model Enquiry {
  id     String    @id @default(auto()) @map("_id") @db.ObjectId
  propertyId String?  @db.ObjectId
  name    String
  email   String 
  number  String     
  message  String
  status    EnquiryStatus
  createdAt  DateTime  @default(now())
  Property Property?    @relation(fields: [propertyId],references: [id])
}

model GeneralEnquiry {
  id    String   @id @default(auto()) @map("_id")  @db.ObjectId
  name  String
  email String?  @unique
  number String[] 
  message String
  city    String
  status    EnquiryStatus
  createdAt  DateTime  @default(now())
}

model Contacts {
  id    String   @id  @default(auto())  @map("_id") @db.ObjectId
  name  String
  email String?  @unique
  number String
  address String?
  city    Region
  createdAt  DateTime  @default(now())
}

enum PropertyType {
  COMMERCIAL
  INDUSTRIAL
  INSTITUTIONAL
  RESIDENTIAL
}

enum EnquiryStatus {
  PENDING
  RESPONDED
  CLOSED
}

enum Type {
  SALE
  LEASE
  PRE_LEASED
}

enum PropertyStatus {
  AVAILABLE
  SOLD
  RENTED
  PENDING
}


enum PropertySubType {
  PLOT          //Common
  SHED         //Industrial
  FACTORY
  WAREHOUSE 
  OFFICE      //Commercial
  SHOP
  SHOWROOM
  BUSSINESS_CENTER
  LAND
  HOTEL
  CORPORATE_PLOT   //Institutional
  CORPORATE_BUILDING 
  COLLEGE_PLOT
  SCHOOL_PLOT
  HOSPITAL_BUILDING
  HOSPITAL_PLOT
  OFFICE_IT
  BUILDING
  IT_PLOT
  IT_BUILDING
  BANQUET_HALL
  APARTMENT       //Residential
  VILLA
  KOTHI
  HOUSE
  BUILDER_FLOOR_APARTMENT
  FARM_HOUSE
}
enum Region {
   NOIDA
   DELHI
   GREATER_NOIDA
}